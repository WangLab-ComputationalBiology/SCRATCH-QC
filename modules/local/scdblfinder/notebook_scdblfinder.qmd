---
title: "Module - Doublet Detection"
description: | 
  Description
execute:
  freeze: auto
  cache: false
format:
  html:
    toc: true
    toc-location: right
    toc-depth: 2
    embed-resources: true
    code-fold: show
    code-tools: true
    df-print: paged
    fig-format: png
    fig-dpi: 300
    fig-responsive: true
    fig-align: center
lightbox:
    match: auto
    effect: zoom
    loop: true
params:
  project_name: 'Project'
  seurat_object: './data/Project_merged_object.RDS'
  n_threads: 8
  n_memory: 16
  work_directory: !expr here::here()
  auto_save: TRUE
---

# Project Name: `r params$project_name`

```{r setup, include = FALSE, message = FALSE, warning = FALSE, echo = FALSE}
#| include: false

# Project parameters 
project_name <- params$project_name
seurat_object <- params$seurat_object

# Inputs and thresholds

# Optional parameters

# Dataflow/Computational parameters
n_threads <- params$n_threads
n_memory <- params$n_memory

# Output parameters
work_directory <- params$work_directory
auto_save <- params$auto_save

# Rmarkdown options

knitr::opts_knit$set(
  root.dir = work_directory
  )

```

## Loading library

```{r library}
#| output: false

library(readr)
library(dplyr)
library(ggplot2)
library(Seurat)
library(DT)
library(SingleCellExperiment)
library(scDblFinder)
library(DoubletFinder)

# Expanding memory
options(future.globals.maxSize = n_memory*1024^3)

```

## Folder structure

```{r project_directory}

if(!dir.exists(work_directory)) {
  dir.create(work_directory, recursive = T)
}

for(sub_directory in c('data', 'figures', 'figures/doublet')) {
  dir.create(paste0(work_directory, '/', sub_directory))
}

```

## Loading Seurat object

```{r loading_rds}

# Reading seurat object
seurat_object <- readRDS(file = seurat_object)

# Setting random seed
random_seed <- 2203
set.seed(random_seed)

```

```{r}
#| warning: false

seurat_temporary <- NormalizeData(object = seurat_object)
seurat_temporary <- FindVariableFeatures(object = seurat_temporary)
seurat_temporary <- ScaleData(object = seurat_temporary)
seurat_temporary <- RunPCA(object = seurat_temporary) 
seurat_temporary <- RunUMAP(object = seurat_temporary, dims = 1:20)

seurat_temporary <- FindNeighbors(seurat_temporary, dims = 1:10)
seurat_temporary <- FindClusters(seurat_temporary, resolution = 0.5)

```

## Converting object

```{r scdblfinder}

# Converting to SingleCellExperiment object
sce <- as.SingleCellExperiment(seurat_temporary)

# Find sample-based doublets
dbl_sample <- scDblFinder(
  sce, 
  samples = 'orig.ident', 
  returnType = "table",
  BPPARAM = BiocParallel::MulticoreParam(n_threads, RNGseed = random_seed)
  )

dbl_sample <- dbl_sample %>%
  as.data.frame()

```

```{r}

# Find cluster-based doublets
dbl_cluster <- scDblFinder(
  sce, 
  clusters = 'seurat_clusters',
  returnType = "table",
  BPPARAM = BiocParallel::MulticoreParam(n_threads, RNGseed = random_seed)
  )

dbl_cluster <- dbl_cluster %>%
  as.data.frame()

```

```{r}

# Sample-sampled prediction
dbl_sample <- dbl_sample[,c("class", "type")]

# Cluster-based prediction
dbl_cluster <- dbl_cluster[,c("cluster", "class", "type")]
colnames(dbl_cluster) <- 
  c("cluster", "cluster_class", "cluster_type")

```

## Adding metadata

```{r double_combine_metadata}

seurat_object <- AddMetaData(
  seurat_object,
  metadata = dbl_sample
)

seurat_object <- AddMetaData(
  seurat_object,
  metadata = dbl_cluster
)

```

```{r meta_inspection}
#| column: screen-inset-shaded

datatable(seurat_object@meta.data, 
    class = 'cell-border stripe',
    rownames = FALSE,
    filter = 'top',
    width = '100%', 
    options = list(scrollX = TRUE)
    )

```

## Doublet composition

```{r}
#| column: screen-inset-shaded
#| layout-nrow: 1

SCP::CellStatPlot(
    seurat_object, 
    stat.by = "class", 
    group.by = "patient_id", 
    legend.position = "bottom",
    legend.direction = "horizontal",
    label = TRUE
)

SCP::CellStatPlot(
    seurat_object, 
    stat.by = "cluster_class", 
    group.by = "patient_id",
    legend.position = "bottom",
    legend.direction = "horizontal",
    label = TRUE
)

```

## Removing doublets

```{r}

seurat_object <- subset(
  seurat_object,
  subset = class == "singlet"
)

```

::: {.callout-warning}
Total cells after doublets removal **`r dim(seurat_object)[2]`**.
:::

## Saving Seurat object

```{r object_dump}

if(auto_save) {
  
  saveRDS(seurat_object, file = paste0('data/', project_name, '_final_qc_object.RDS'))
  
}

```

## Parameters log

```{r params_log, message = FALSE, warning = FALSE, echo = FALSE}

print(params)

```

## Session info

```{r session_info, message = FALSE, warning = FALSE, echo = FALSE}

sessionInfo()

```
